// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use gio_sys;
use glib::object::IsA;
use glib::translate::*;
use std::fmt;

glib_wrapper! {
    pub struct UnixFDList(Object<gio_sys::GUnixFDList, gio_sys::GUnixFDListClass, UnixFDListClass>);

    match fn {
        get_type => || gio_sys::g_unix_fd_list_get_type(),
    }
}

impl UnixFDList {
    pub fn new() -> UnixFDList {
        unsafe { from_glib_full(gio_sys::g_unix_fd_list_new()) }
    }
}

impl Default for UnixFDList {
    fn default() -> Self {
        Self::new()
    }
}

pub const NONE_UNIX_FD_LIST: Option<&UnixFDList> = None;

pub trait UnixFDListExt: 'static {
    fn get_length(&self) -> i32;
}

impl<O: IsA<UnixFDList>> UnixFDListExt for O {
    fn get_length(&self) -> i32 {
        unsafe { gio_sys::g_unix_fd_list_get_length(self.as_ref().to_glib_none().0) }
    }
}

impl fmt::Display for UnixFDList {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "UnixFDList")
    }
}
